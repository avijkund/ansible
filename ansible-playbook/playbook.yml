---
- name: rh294 ansible playbook
  hosts: servera
  vars:
    firewall_pkg: firewalld
    firewall_svc: firewalld
    web_pkg: httpd
    web_svc: httpd
    ssl_pkg: mod_ssl
    httpdconf_src: files/httpd.conf
    httpdconf_dest: /etc/httpd/conf/httpd.conf
    htaccess_src: files/.htaccess
    secrets_dir: /etc/httpd/secrets
    secrets_src: files/htpasswd
    secrets_dest: "{{ secrets_dir }}/htpasswd"
    web_root: /var/www/html

  tasks:
    - name: install latest necessary packages
      yum:
        name:
          - "{{ firewall_pkg }}"
          - "{{ web_pkg }}"
          - "{{ ssl_pkg }}"
        state: latest

    - name: copy the config file to managed hosts
      copy:
        src: "{{ httpdconf_src }}"
        dest: "{{ httpdconf_dest }}"
        owner: root
        group: root
        mode: 0644

    - name: create a directory on managed hosts
      file:
        path: "{{ secrets_dir }}"
        state: directory
        owner: apache
        group: apache
        mode: 0500

    - name: copy the secret file to managed hosts
      copy:
        src: "{{ htaccess_src }}"
        dest: "{{ web_root }}/.htaccess"
        owner: apache
        group: apache
        mode: 0400

    - name: creating web content in managed hosts
      copy:
        content: "{{ansible_facts ['fqdn']}} {{ ansible_facts ['default_ipv4']['address']}} has been customized by Ansible."
        dest: "{{ web_root}}/index.html"

    - name: start the firewall service
      service:
        name: "{{ firewall_svc }}"
        state: "{{ started }}"
        enabled: true

    - name: allow https through firewalld
      firewalld:
        service: "{{ web_svc }}"
        state: enabled
        permanent: true
        immediate: true

- name: test authentication to the web server from localhost
  hosts: localhost
  become: false
  vars:
    web_user: guest
  vars_files: vars/secret.yml
  tasks:

    - name: check the web connectivity from localhost
      uri:
        url: https://servera
        return_content: true
        validate_certs: false
        force_basic_auth: true
        user: "{{ web_user }}"
        password: "{{ web_pass }}"
        status_code: 200
      register: auth_testing

    - name: viewing the content of the webserver
      debug:
        vars: auth_testing

...
        
